{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Manual de Infraestrutura e-SUS AF Introdu\u00e7\u00e3o Este documento foi constru\u00eddo para apoiar o processe de implanta\u00e7\u00e3o do e-SUS AF, com foco na infraestrutura necess\u00e1ria para o funcionamento do sistema. Desta forma, para que seja poss\u00edvel obter o maior aproveitamento deste material, espera-se que o leitor tenha conhecimento b\u00e1sico sobre a arquitetura de sistemas e infraestrutura de TI. P\u00fablico-alvo Este manual \u00e9 destinado a desenvolvedores, gestores de configura\u00e7\u00e3o e profissionais de TI que atuam na implanta\u00e7\u00e3o e manuten\u00e7\u00e3o do sistema e-SUS AF. O conte\u00fado \u00e9 voltado para aqueles que desejam entender melhor a infraestrutura necess\u00e1ria para o funcionamento do sistema, bem como os requisitos t\u00e9cnicos e orienta\u00e7\u00f5es para instala\u00e7\u00e3o e configura\u00e7\u00e3o. Temas abordados Ser\u00e3o abordados temas relevantes para a infraestrutura do e-SUS AF, incluindo: Descri\u00e7\u00e3o da arquitetura do sistema Requisitos t\u00e9cnicos Compnentes da aplica\u00e7\u00e3o Orienta\u00e7\u00f5es para instala\u00e7\u00e3o e configura\u00e7\u00e3o Melhores pr\u00e1ticas de seguran\u00e7a Monitoramento e manuten\u00e7\u00e3o","title":"P\u00e1gina Inicial"},{"location":"#manual-de-infraestrutura-e-sus-af","text":"","title":"Manual de Infraestrutura e-SUS AF"},{"location":"#introducao","text":"Este documento foi constru\u00eddo para apoiar o processe de implanta\u00e7\u00e3o do e-SUS AF, com foco na infraestrutura necess\u00e1ria para o funcionamento do sistema. Desta forma, para que seja poss\u00edvel obter o maior aproveitamento deste material, espera-se que o leitor tenha conhecimento b\u00e1sico sobre a arquitetura de sistemas e infraestrutura de TI.","title":"Introdu\u00e7\u00e3o"},{"location":"#publico-alvo","text":"Este manual \u00e9 destinado a desenvolvedores, gestores de configura\u00e7\u00e3o e profissionais de TI que atuam na implanta\u00e7\u00e3o e manuten\u00e7\u00e3o do sistema e-SUS AF. O conte\u00fado \u00e9 voltado para aqueles que desejam entender melhor a infraestrutura necess\u00e1ria para o funcionamento do sistema, bem como os requisitos t\u00e9cnicos e orienta\u00e7\u00f5es para instala\u00e7\u00e3o e configura\u00e7\u00e3o.","title":"P\u00fablico-alvo"},{"location":"#temas-abordados","text":"Ser\u00e3o abordados temas relevantes para a infraestrutura do e-SUS AF, incluindo: Descri\u00e7\u00e3o da arquitetura do sistema Requisitos t\u00e9cnicos Compnentes da aplica\u00e7\u00e3o Orienta\u00e7\u00f5es para instala\u00e7\u00e3o e configura\u00e7\u00e3o Melhores pr\u00e1ticas de seguran\u00e7a Monitoramento e manuten\u00e7\u00e3o","title":"Temas abordados"},{"location":"modulos/ambiente/ambiente/","text":"Prepara\u00e7\u00e3o do Ambiente Pr\u00e9-requisitos Como pr\u00e9 requisito para a instala\u00e7\u00e3o do sistema pedimos: Orquestrador de container Docker e Docker Compose (em ambiente local ou servidor) Kubernetes >= 1.28 (em ambiente clusterizado) Vari\u00e1veis de ambiente definidas: POSTGRES_USER=postgres POSTGRES_PASSWORD=12345678 REDIS_PASSWORD=123456 REDIS_PORT=6379","title":"Prepara\u00e7\u00e3o do Ambiente"},{"location":"modulos/ambiente/ambiente/#preparacao-do-ambiente","text":"","title":"Prepara\u00e7\u00e3o do Ambiente"},{"location":"modulos/ambiente/ambiente/#pre-requisitos","text":"Como pr\u00e9 requisito para a instala\u00e7\u00e3o do sistema pedimos: Orquestrador de container Docker e Docker Compose (em ambiente local ou servidor) Kubernetes >= 1.28 (em ambiente clusterizado) Vari\u00e1veis de ambiente definidas: POSTGRES_USER=postgres POSTGRES_PASSWORD=12345678 REDIS_PASSWORD=123456 REDIS_PORT=6379","title":"Pr\u00e9-requisitos"},{"location":"modulos/arquitetura/arquitetura/","text":"Arquitetura do sistema A arquitetura do sistema \u00e9 composta de 2 partes para o sistema, que consiste na camada de apresenta\u00e7\u00e3o denominada de Servi\u00e7o Web e o Servi\u00e7o de API. O sistema \u00e9 composto dos seguintes componentes: Load Balance - Componente respons\u00e1vel pela distribui\u00e7\u00e3o da carga entre m\u00e1quinas Servi\u00e7o Web - Componente respons\u00e1vel pela disponibiliza\u00e7\u00e3o da camada de apresenta\u00e7\u00e3o da aplica\u00e7\u00e3o Servi\u00e7o de API - Componente respons\u00e1vel pela disponibiliza\u00e7\u00e3o dos dados do sistema. Redis - Componente respons\u00e1vel pelo armazenamento dos tokens de autentica\u00e7\u00e3o e cache distribu\u00eddo. Banco de dados - Componente de persist\u00eancia de dados. Nessa vers\u00e3o inicial a compatibilidade testada \u00e9 com o Banco PostgreSQL. +--------------------+ +--------------------+ | Usu\u00e1rio Final |<------>| Load Balancer | +--------------------+ +--------------------+ | +---------------------+--------------------+ | | +----------------+ +--------------------+ | Servi\u00e7o WEB | | Servi\u00e7o API | | (Nginx ou App) |<----------------------->| REST API | +----------------+ +--------------------+ | | +--------------+ +----------------+ | Redis | | Banco de Dados | | (Cache| | | PostgreSQL | +--------------+ +----------------+","title":"Arquitetura do Sistema"},{"location":"modulos/arquitetura/arquitetura/#arquitetura-do-sistema","text":"A arquitetura do sistema \u00e9 composta de 2 partes para o sistema, que consiste na camada de apresenta\u00e7\u00e3o denominada de Servi\u00e7o Web e o Servi\u00e7o de API. O sistema \u00e9 composto dos seguintes componentes: Load Balance - Componente respons\u00e1vel pela distribui\u00e7\u00e3o da carga entre m\u00e1quinas Servi\u00e7o Web - Componente respons\u00e1vel pela disponibiliza\u00e7\u00e3o da camada de apresenta\u00e7\u00e3o da aplica\u00e7\u00e3o Servi\u00e7o de API - Componente respons\u00e1vel pela disponibiliza\u00e7\u00e3o dos dados do sistema. Redis - Componente respons\u00e1vel pelo armazenamento dos tokens de autentica\u00e7\u00e3o e cache distribu\u00eddo. Banco de dados - Componente de persist\u00eancia de dados. Nessa vers\u00e3o inicial a compatibilidade testada \u00e9 com o Banco PostgreSQL. +--------------------+ +--------------------+ | Usu\u00e1rio Final |<------>| Load Balancer | +--------------------+ +--------------------+ | +---------------------+--------------------+ | | +----------------+ +--------------------+ | Servi\u00e7o WEB | | Servi\u00e7o API | | (Nginx ou App) |<----------------------->| REST API | +----------------+ +--------------------+ | | +--------------+ +----------------+ | Redis | | Banco de Dados | | (Cache| | | PostgreSQL | +--------------+ +----------------+","title":"Arquitetura do sistema"},{"location":"modulos/componentes/acessorios/","text":"COMPONENTES ACESS\u00d3RIOS AO e-SUS AF Como relatado no documento de introdu\u00e7\u00e3o, os componentes acess\u00f3rios s\u00e3o aqueles que estendem os recursos do sistema e garantem funcionalidades adicionais \u00e0 aplica\u00e7\u00e3o. Estes componentes possibilitam tem fun\u00e7\u00f5es variadas atuando em in\u00fameras frentes. A escolha der quais componentes acess\u00f3rios utilizar \u00e9 do gestor de infraestrutura e, para esta defini\u00e7\u00e3o, deve-se considerar o porte da aplica\u00e7\u00e3o, a infraestrutura dispon\u00edvel e as necessidades de monitoramento e gest\u00e3o do sistema. A seguir, listamos os componentes acess\u00f3rios que podem ser utilizados com o e-SUS AF. Apache Superset O Apache Superset \u00e9 uma plataforma de visualiza\u00e7\u00e3o de dados que permite a cria\u00e7\u00e3o de dashboards e relat\u00f3rios interativos. Ele pode ser integrado ao e-SUS AF para fornecer uma interface de visualiza\u00e7\u00e3o dos dados, facilitando a an\u00e1lise e interpreta\u00e7\u00e3o das informa\u00e7\u00f5es possibilitando a cria\u00e7\u00e3o de gr\u00e1ficos, tabelas e outros elementos visuais que ajudam na tomada de decis\u00f5es. Faz parte do conjunto de ferramentas de Business Intelligence (BI) e \u00e9 uma op\u00e7\u00e3o popular para visualiza\u00e7\u00e3o de dados em ambientes corporativos. O banco de dados do e-SUS AF \u00e9 munido de um conjunto de views que podem ser utilizadas para a cria\u00e7\u00e3o de dashboards e relat\u00f3rios no Apache Superset, estas views s\u00e3o criadas e mantidas pelo pr\u00f3prio e-SUS AF, garantindo que os dados estejam sempre atualizados e consistentes. para al\u00e9m das views disponibilizadas, \u00e9 poss\u00edvel acessar diretamente as tabelas do banco de dados, permitindo uma flexibilidade maior na cria\u00e7\u00e3o de visualiza\u00e7\u00f5es personalizadas sw forma a tirar m\u00e1ximo proveito dos recursos avan\u00e7ados de filtragem, agrupamento e drill-down, permitindo que os usu\u00e1rios explorem os dados de forma interativa. O Reposit\u00f3rio do BI e-SUS AF oferece uma s\u00e9rie de dashboards pr\u00e9-configurados que podem ser utilizados como ponto de partida para a cria\u00e7\u00e3o de visualiza\u00e7\u00f5es personalizadas, facilitando a an\u00e1lise de dados e a tomada de decis\u00f5es informadas. graph TD A[Usu\u00e1rio] --> B[Apache Superset] B --> E[Dashboards Pr\u00e9-configurados] B --> F[Dashboards Personalizados] E --> C[Views do Banco de Dados e-SUS AF] F --> C F --> D[Tabelas do Banco de Dados e-SUS AF]","title":"Componentes Acess\u00f3rios"},{"location":"modulos/componentes/acessorios/#componentes-acessorios-ao-e-sus-af","text":"Como relatado no documento de introdu\u00e7\u00e3o, os componentes acess\u00f3rios s\u00e3o aqueles que estendem os recursos do sistema e garantem funcionalidades adicionais \u00e0 aplica\u00e7\u00e3o. Estes componentes possibilitam tem fun\u00e7\u00f5es variadas atuando em in\u00fameras frentes. A escolha der quais componentes acess\u00f3rios utilizar \u00e9 do gestor de infraestrutura e, para esta defini\u00e7\u00e3o, deve-se considerar o porte da aplica\u00e7\u00e3o, a infraestrutura dispon\u00edvel e as necessidades de monitoramento e gest\u00e3o do sistema. A seguir, listamos os componentes acess\u00f3rios que podem ser utilizados com o e-SUS AF.","title":"COMPONENTES ACESS\u00d3RIOS AO e-SUS AF"},{"location":"modulos/componentes/acessorios/#apache-superset","text":"O Apache Superset \u00e9 uma plataforma de visualiza\u00e7\u00e3o de dados que permite a cria\u00e7\u00e3o de dashboards e relat\u00f3rios interativos. Ele pode ser integrado ao e-SUS AF para fornecer uma interface de visualiza\u00e7\u00e3o dos dados, facilitando a an\u00e1lise e interpreta\u00e7\u00e3o das informa\u00e7\u00f5es possibilitando a cria\u00e7\u00e3o de gr\u00e1ficos, tabelas e outros elementos visuais que ajudam na tomada de decis\u00f5es. Faz parte do conjunto de ferramentas de Business Intelligence (BI) e \u00e9 uma op\u00e7\u00e3o popular para visualiza\u00e7\u00e3o de dados em ambientes corporativos. O banco de dados do e-SUS AF \u00e9 munido de um conjunto de views que podem ser utilizadas para a cria\u00e7\u00e3o de dashboards e relat\u00f3rios no Apache Superset, estas views s\u00e3o criadas e mantidas pelo pr\u00f3prio e-SUS AF, garantindo que os dados estejam sempre atualizados e consistentes. para al\u00e9m das views disponibilizadas, \u00e9 poss\u00edvel acessar diretamente as tabelas do banco de dados, permitindo uma flexibilidade maior na cria\u00e7\u00e3o de visualiza\u00e7\u00f5es personalizadas sw forma a tirar m\u00e1ximo proveito dos recursos avan\u00e7ados de filtragem, agrupamento e drill-down, permitindo que os usu\u00e1rios explorem os dados de forma interativa. O Reposit\u00f3rio do BI e-SUS AF oferece uma s\u00e9rie de dashboards pr\u00e9-configurados que podem ser utilizados como ponto de partida para a cria\u00e7\u00e3o de visualiza\u00e7\u00f5es personalizadas, facilitando a an\u00e1lise de dados e a tomada de decis\u00f5es informadas. graph TD A[Usu\u00e1rio] --> B[Apache Superset] B --> E[Dashboards Pr\u00e9-configurados] B --> F[Dashboards Personalizados] E --> C[Views do Banco de Dados e-SUS AF] F --> C F --> D[Tabelas do Banco de Dados e-SUS AF]","title":"Apache Superset"},{"location":"modulos/componentes/introducao/","text":"Introdu\u00e7\u00e3o Este m\u00f3dulo descreve os componentes do sistema e-SUS AF , incluindo os componentes acess\u00f3rios e principais para a aplica\u00e7\u00e3o e suas respectivas fun\u00e7\u00f5es. Para fins gerais, considere como Componentes Principais aqueles que s\u00e3o estritamente necess\u00e1rios para o funcionamento do sistema, tais como interface web, api de servi\u00e7os, e demais componentes essenciais ao funcionamento da aplica\u00e7\u00e3o, e como Componentes Acess\u00f3rios , aqueles que estendem recursos do sistema garantindo funcionalidades adicionais \u00e0 aplica\u00e7\u00e3o. S\u00e3o considerados componentes obrigat\u00f3rios: Interface WEB API de servi\u00e7os Banco de Dados Servi\u00e7o de cache Servi\u00e7o de integra\u00e7\u00e3o ao SI BNAFAR Quanto ao conjunto de componentes opcionais, listamos: Interface Web de monitoramento Servi\u00e7o de coleta de logs Servi\u00e7o de coleta de m\u00e9tricas Interface de dataview Servi\u00e7o de automa\u00e7\u00e3o, gerenciamento e coordena\u00e7\u00e3o de fluxos de dados","title":"Introdu\u00e7\u00e3o"},{"location":"modulos/componentes/introducao/#introducao","text":"Este m\u00f3dulo descreve os componentes do sistema e-SUS AF , incluindo os componentes acess\u00f3rios e principais para a aplica\u00e7\u00e3o e suas respectivas fun\u00e7\u00f5es. Para fins gerais, considere como Componentes Principais aqueles que s\u00e3o estritamente necess\u00e1rios para o funcionamento do sistema, tais como interface web, api de servi\u00e7os, e demais componentes essenciais ao funcionamento da aplica\u00e7\u00e3o, e como Componentes Acess\u00f3rios , aqueles que estendem recursos do sistema garantindo funcionalidades adicionais \u00e0 aplica\u00e7\u00e3o. S\u00e3o considerados componentes obrigat\u00f3rios: Interface WEB API de servi\u00e7os Banco de Dados Servi\u00e7o de cache Servi\u00e7o de integra\u00e7\u00e3o ao SI BNAFAR Quanto ao conjunto de componentes opcionais, listamos: Interface Web de monitoramento Servi\u00e7o de coleta de logs Servi\u00e7o de coleta de m\u00e9tricas Interface de dataview Servi\u00e7o de automa\u00e7\u00e3o, gerenciamento e coordena\u00e7\u00e3o de fluxos de dados","title":"Introdu\u00e7\u00e3o"},{"location":"modulos/componentes/principais/","text":"","title":"Componentes Principais"},{"location":"modulos/instalacao/bancodedados/","text":"Banco de Dados Sempre utilizar armazenamento persistente. Implementar backup automatizado com pg_dump , wal-g ou servi\u00e7o gerenciado. Se poss\u00edvel, utilizar PostgreSQL como servi\u00e7o gerenciado (AWS RDS, GCP CloudSQL, etc). Backup PostgreSQL pg_dump -U postgres -h <db_host> -F c -b -v -f /backups/backup-$(date +%F).sqlc esus Restore PostgreSQL pg_restore -U postgres -h <db_host> -d esus -v /backups/backup-2025-03-27.sqlc","title":"Banco de Dados"},{"location":"modulos/instalacao/bancodedados/#banco-de-dados","text":"Sempre utilizar armazenamento persistente. Implementar backup automatizado com pg_dump , wal-g ou servi\u00e7o gerenciado. Se poss\u00edvel, utilizar PostgreSQL como servi\u00e7o gerenciado (AWS RDS, GCP CloudSQL, etc).","title":"Banco de Dados"},{"location":"modulos/instalacao/bancodedados/#backup-postgresql","text":"pg_dump -U postgres -h <db_host> -F c -b -v -f /backups/backup-$(date +%F).sqlc esus","title":"Backup PostgreSQL"},{"location":"modulos/instalacao/bancodedados/#restore-postgresql","text":"pg_restore -U postgres -h <db_host> -d esus -v /backups/backup-2025-03-27.sqlc","title":"Restore PostgreSQL"},{"location":"modulos/instalacao/cache/","text":"Backup Redict O Redict salva automaticamente no arquivo dump.rdb configurado em redis.conf . Para garantir um backup di\u00e1rio, armazene o arquivo rdb: BGSAVE cp /data/dump.rdb /backup/redis-dump-$(date +%F).rdb","title":"Banco de Dados Chave-valor"},{"location":"modulos/instalacao/cache/#backup-redict","text":"O Redict salva automaticamente no arquivo dump.rdb configurado em redis.conf . Para garantir um backup di\u00e1rio, armazene o arquivo rdb: BGSAVE cp /data/dump.rdb /backup/redis-dump-$(date +%F).rdb","title":"Backup Redict"},{"location":"modulos/instalacao/checklist/","text":"Checklist P\u00f3s-Instala\u00e7\u00e3o Backup autom\u00e1tico validado Load Balancer com health-check funcional Monitoramento ativo e gerando alertas TLS implementado Secrets e senhas protegidos Pol\u00edticas de rede (firewall ou Kubernetes NetworkPolicy) aplicadas","title":"Check-list p\u00f3s instala\u00e7\u00e3o"},{"location":"modulos/instalacao/checklist/#checklist-pos-instalacao","text":"Backup autom\u00e1tico validado Load Balancer com health-check funcional Monitoramento ativo e gerando alertas TLS implementado Secrets e senhas protegidos Pol\u00edticas de rede (firewall ou Kubernetes NetworkPolicy) aplicadas","title":"Checklist P\u00f3s-Instala\u00e7\u00e3o"},{"location":"modulos/instalacao/compose/","text":"Instala\u00e7\u00e3o com Docker Compose Crie o arquivo docker-compose.yml : version: '3.5' services: web: container_name: web image: ghcr.io/projeto-af/e-susaf/e-susaf-web:latest ports: - \"8000:80\" environment: VAR__API_URL: \"http://api:3001\" api: container_name: api image: ghcr.io/projeto-af/e-susaf/e-susaf-api:latest ports: - \"3001:3001\" environment: DB_HOST: db PORT: \"3001\" db: container_name: db image: postgres:15 environment: POSTGRES_DB: esus POSTGRES_USER: ${POSTGRES_USER} POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} PGDATA: /data/postgres volumes: - ../database/postgres:/docker-entrypoint-initdb.d - postgres:/data/postgres ports: - \"5432:5432\" restart: unless-stopped redis: image: registry.redict.io/redict:latest container_name: redis restart: always ports: - \"${REDIS_PORT}:6379\" environment: REDICT_PASSWORD: ${REDIS_PASSWORD} volumes: - redis_data:/data volumes: postgres: redis_data: Execu\u00e7\u00e3o Para executar, siga com o comando: docker-compose up -d","title":"Instala\u00e7\u00e3o com Docker Compose"},{"location":"modulos/instalacao/compose/#instalacao-com-docker-compose","text":"Crie o arquivo docker-compose.yml : version: '3.5' services: web: container_name: web image: ghcr.io/projeto-af/e-susaf/e-susaf-web:latest ports: - \"8000:80\" environment: VAR__API_URL: \"http://api:3001\" api: container_name: api image: ghcr.io/projeto-af/e-susaf/e-susaf-api:latest ports: - \"3001:3001\" environment: DB_HOST: db PORT: \"3001\" db: container_name: db image: postgres:15 environment: POSTGRES_DB: esus POSTGRES_USER: ${POSTGRES_USER} POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} PGDATA: /data/postgres volumes: - ../database/postgres:/docker-entrypoint-initdb.d - postgres:/data/postgres ports: - \"5432:5432\" restart: unless-stopped redis: image: registry.redict.io/redict:latest container_name: redis restart: always ports: - \"${REDIS_PORT}:6379\" environment: REDICT_PASSWORD: ${REDIS_PASSWORD} volumes: - redis_data:/data volumes: postgres: redis_data:","title":"Instala\u00e7\u00e3o com Docker Compose"},{"location":"modulos/instalacao/compose/#execucao","text":"Para executar, siga com o comando: docker-compose up -d","title":"Execu\u00e7\u00e3o"},{"location":"modulos/instalacao/kubernetes/","text":"Instala\u00e7\u00e3o com Kubernetes Deployment WEB web-deployment.yaml apiVersion: apps/v1 kind: Deployment metadata: name: web spec: replicas: 2 selector: matchLabels: app: web template: metadata: labels: app: web spec: containers: - name: web image: ghcr.io/projeto-af/e-susaf/e-susaf-web:latest env: - name: VAR__API_URL value: \"http://api:3001\" ports: - containerPort: 80 --- apiVersion: v1 kind: Service metadata: name: web spec: type: LoadBalancer selector: app: web ports: - port: 80 targetPort: 80 Deployment API api-deployment.yaml apiVersion: apps/v1 kind: Deployment metadata: name: api spec: replicas: 3 selector: matchLabels: app: api template: metadata: labels: app: api spec: containers: - name: api image: ghcr.io/projeto-af/e-susaf/e-susaf-api:latest env: - name: DB_HOST value: \"db\" - name: PORT value: \"3001\" ports: - containerPort: 3001 --- apiVersion: v1 kind: Service metadata: name: api spec: selector: app: api ports: - port: 3001 targetPort: 3001 StatefulSet Banco de Dados Para o banco de dados, a vers\u00e3o preliminar seria um PostgreSQL. Recomendamos um servi\u00e7o gerenciado de banco de dados. Se necess\u00e1rio por economia ou para disponibilizar um ambiente menor para treinamento ou homologa\u00e7\u00e3o do sistema, pode-se instalar um banco de dados diretamente no cluster. Segue um exemplo do yaml para isso. db-statefulset.yaml apiVersion: apps/v1 kind: StatefulSet metadata: name: db spec: serviceName: \"db\" replicas: 1 selector: matchLabels: app: db template: metadata: labels: app: db spec: containers: - name: postgres image: postgres:15 env: - name: POSTGRES_DB value: esus - name: POSTGRES_USER valueFrom: secretKeyRef: name: postgres-secret key: user - name: POSTGRES_PASSWORD valueFrom: secretKeyRef: name: postgres-secret key: password ports: - containerPort: 5432 volumeMounts: - name: postgres-pv mountPath: /data/postgres volumeClaimTemplates: - metadata: name: postgres-pv spec: accessModes: [\"ReadWriteOnce\"] resources: requests: storage: 100Gi","title":"Instala\u00e7\u00e3o com Kubernetes"},{"location":"modulos/instalacao/kubernetes/#instalacao-com-kubernetes","text":"","title":"Instala\u00e7\u00e3o com Kubernetes"},{"location":"modulos/instalacao/kubernetes/#deployment-web","text":"web-deployment.yaml apiVersion: apps/v1 kind: Deployment metadata: name: web spec: replicas: 2 selector: matchLabels: app: web template: metadata: labels: app: web spec: containers: - name: web image: ghcr.io/projeto-af/e-susaf/e-susaf-web:latest env: - name: VAR__API_URL value: \"http://api:3001\" ports: - containerPort: 80 --- apiVersion: v1 kind: Service metadata: name: web spec: type: LoadBalancer selector: app: web ports: - port: 80 targetPort: 80","title":"Deployment WEB"},{"location":"modulos/instalacao/kubernetes/#deployment-api","text":"api-deployment.yaml apiVersion: apps/v1 kind: Deployment metadata: name: api spec: replicas: 3 selector: matchLabels: app: api template: metadata: labels: app: api spec: containers: - name: api image: ghcr.io/projeto-af/e-susaf/e-susaf-api:latest env: - name: DB_HOST value: \"db\" - name: PORT value: \"3001\" ports: - containerPort: 3001 --- apiVersion: v1 kind: Service metadata: name: api spec: selector: app: api ports: - port: 3001 targetPort: 3001","title":"Deployment API"},{"location":"modulos/instalacao/kubernetes/#statefulset-banco-de-dados","text":"Para o banco de dados, a vers\u00e3o preliminar seria um PostgreSQL. Recomendamos um servi\u00e7o gerenciado de banco de dados. Se necess\u00e1rio por economia ou para disponibilizar um ambiente menor para treinamento ou homologa\u00e7\u00e3o do sistema, pode-se instalar um banco de dados diretamente no cluster. Segue um exemplo do yaml para isso. db-statefulset.yaml apiVersion: apps/v1 kind: StatefulSet metadata: name: db spec: serviceName: \"db\" replicas: 1 selector: matchLabels: app: db template: metadata: labels: app: db spec: containers: - name: postgres image: postgres:15 env: - name: POSTGRES_DB value: esus - name: POSTGRES_USER valueFrom: secretKeyRef: name: postgres-secret key: user - name: POSTGRES_PASSWORD valueFrom: secretKeyRef: name: postgres-secret key: password ports: - containerPort: 5432 volumeMounts: - name: postgres-pv mountPath: /data/postgres volumeClaimTemplates: - metadata: name: postgres-pv spec: accessModes: [\"ReadWriteOnce\"] resources: requests: storage: 100Gi","title":"StatefulSet Banco de Dados"},{"location":"modulos/instalacao/loadbalance/","text":"Load Balancer e Redund\u00e2ncia O servi\u00e7o web deve expor type: LoadBalancer ou ser gerenciado via Ingress Controller . Replique a API e o WEB para obter alta disponibilidade. Utilize Redis e PostgreSQL com estrat\u00e9gias de failover (Redis Sentinel e Patroni s\u00e3o recomendados).","title":"Load Balance e Redund\u00e2ncia"},{"location":"modulos/instalacao/loadbalance/#load-balancer-e-redundancia","text":"O servi\u00e7o web deve expor type: LoadBalancer ou ser gerenciado via Ingress Controller . Replique a API e o WEB para obter alta disponibilidade. Utilize Redis e PostgreSQL com estrat\u00e9gias de failover (Redis Sentinel e Patroni s\u00e3o recomendados).","title":"Load Balancer e Redund\u00e2ncia"},{"location":"modulos/praticas/boaspraticas/","text":"Boas Pr\u00e1ticas Agende backups di\u00e1rios com cron . Armazene em local externo (cloud ou storage dedicado). Mantenha ao menos 7 dias de reten\u00e7\u00e3o e uma c\u00f3pia off-site. Seguran\u00e7a e Boas Pr\u00e1ticas Nunca armazene segredos no docker-compose.yml ou manifests do Kubernetes. Utilize: Docker Secrets Kubernetes Secrets + Vault (Hashicorp) ou SOPS Acesso SSH restrito e auditado Backup criptografado Use TLS para todas as comunica\u00e7\u00f5es (Ingress, API, DB) Configurar pol\u00edticas de rede (NetworkPolicy no Kubernetes ou firewalls em Docker) Configurar autentica\u00e7\u00e3o e RBAC nos clusters Monitoramento e Logging Para garantir a estabilidade, performance e seguran\u00e7a do sistema, o monitoramento cont\u00ednuo e o logging centralizado s\u00e3o indispens\u00e1veis. Requisitos de Monitoramento M\u00e9tricas essenciais : CPU, mem\u00f3ria, disco e rede de todos os servi\u00e7os Lat\u00eancia e disponibilidade da API Status do banco de dados (replica\u00e7\u00e3o, consumo de espa\u00e7o, performance de queries) Load Balancer (tempo de resposta, erros 4xx/5xx) Stack Recomendada Prometheus + Grafana : coleta e visualiza\u00e7\u00e3o de m\u00e9tricas. Loki ou ELK Stack (Elasticsearch, Logstash, Kibana) : logging centralizado. Alertmanager : envio de alertas por e-mail, Slack ou outros canais. Boas Pr\u00e1ticas Reten\u00e7\u00e3o de logs adequada (m\u00ednimo 30 dias em produ\u00e7\u00e3o). Logs armazenados fora da m\u00e1quina principal (volumes ou servi\u00e7os externos). Alertas de thresholds cr\u00edticos bem definidos. Testes de funcionalidade Consumo de API via Postman ou Insomnia Fluxo de autentica\u00e7\u00e3o e funcionalidades principais Testes de carga (opcional) k6 , wrk , locust para simular usu\u00e1rios simult\u00e2neos Verifica\u00e7\u00e3o de monitoramento e alertas Simular falha de servi\u00e7o para validar recebimento de alertas Verifique status:","title":"Boas Pr\u00e1ticas"},{"location":"modulos/praticas/boaspraticas/#boas-praticas","text":"Agende backups di\u00e1rios com cron . Armazene em local externo (cloud ou storage dedicado). Mantenha ao menos 7 dias de reten\u00e7\u00e3o e uma c\u00f3pia off-site.","title":"Boas Pr\u00e1ticas"},{"location":"modulos/praticas/boaspraticas/#seguranca-e-boas-praticas","text":"Nunca armazene segredos no docker-compose.yml ou manifests do Kubernetes. Utilize: Docker Secrets Kubernetes Secrets + Vault (Hashicorp) ou SOPS Acesso SSH restrito e auditado Backup criptografado Use TLS para todas as comunica\u00e7\u00f5es (Ingress, API, DB) Configurar pol\u00edticas de rede (NetworkPolicy no Kubernetes ou firewalls em Docker) Configurar autentica\u00e7\u00e3o e RBAC nos clusters","title":"Seguran\u00e7a e Boas Pr\u00e1ticas"},{"location":"modulos/praticas/boaspraticas/#monitoramento-e-logging","text":"Para garantir a estabilidade, performance e seguran\u00e7a do sistema, o monitoramento cont\u00ednuo e o logging centralizado s\u00e3o indispens\u00e1veis.","title":"Monitoramento e Logging"},{"location":"modulos/praticas/boaspraticas/#requisitos-de-monitoramento","text":"M\u00e9tricas essenciais : CPU, mem\u00f3ria, disco e rede de todos os servi\u00e7os Lat\u00eancia e disponibilidade da API Status do banco de dados (replica\u00e7\u00e3o, consumo de espa\u00e7o, performance de queries) Load Balancer (tempo de resposta, erros 4xx/5xx)","title":"Requisitos de Monitoramento"},{"location":"modulos/praticas/boaspraticas/#stack-recomendada","text":"Prometheus + Grafana : coleta e visualiza\u00e7\u00e3o de m\u00e9tricas. Loki ou ELK Stack (Elasticsearch, Logstash, Kibana) : logging centralizado. Alertmanager : envio de alertas por e-mail, Slack ou outros canais.","title":"Stack Recomendada"},{"location":"modulos/praticas/boaspraticas/#boas-praticas_1","text":"Reten\u00e7\u00e3o de logs adequada (m\u00ednimo 30 dias em produ\u00e7\u00e3o). Logs armazenados fora da m\u00e1quina principal (volumes ou servi\u00e7os externos). Alertas de thresholds cr\u00edticos bem definidos.","title":"Boas Pr\u00e1ticas"},{"location":"modulos/praticas/boaspraticas/#testes-de-funcionalidade","text":"Consumo de API via Postman ou Insomnia Fluxo de autentica\u00e7\u00e3o e funcionalidades principais","title":"Testes de funcionalidade"},{"location":"modulos/praticas/boaspraticas/#testes-de-carga-opcional","text":"k6 , wrk , locust para simular usu\u00e1rios simult\u00e2neos","title":"Testes de carga (opcional)"},{"location":"modulos/praticas/boaspraticas/#verificacao-de-monitoramento-e-alertas","text":"Simular falha de servi\u00e7o para validar recebimento de alertas Verifique status:","title":"Verifica\u00e7\u00e3o de monitoramento e alertas"},{"location":"modulos/problemas/problemas/","text":"Troubleshooting Problema Causa Comum Solu\u00e7\u00e3o API n\u00e3o conecta no Banco Vari\u00e1veis de ambiente incorretas Verifique a defini\u00e7\u00e3o de env vars Porta n\u00e3o acess\u00edvel Firewall bloqueando Libere as portas 8000 e 3001 Load Balancer n\u00e3o sobe Cluster mal configurado Verifique logs e provisionamento do cloud provider Comandos \u00fateis Fun\u00e7\u00e3o Comando Verificar logs (Docker) docker-compose logs -f Verificar containers docker ps Verificar pods (K8s) kubectl get pods Logs de um pod kubectl logs <pod> Acesso ao banco psql -h <db_host> -U <user> -d <database> Diagn\u00f3stico de problemas comuns Vari\u00e1veis de ambiente ausentes ou mal configuradas Consumo elevado de recursos Falha de conectividade entre servi\u00e7os Volume n\u00e3o persistente no banco de dados","title":"Troubleshooting"},{"location":"modulos/problemas/problemas/#troubleshooting","text":"Problema Causa Comum Solu\u00e7\u00e3o API n\u00e3o conecta no Banco Vari\u00e1veis de ambiente incorretas Verifique a defini\u00e7\u00e3o de env vars Porta n\u00e3o acess\u00edvel Firewall bloqueando Libere as portas 8000 e 3001 Load Balancer n\u00e3o sobe Cluster mal configurado Verifique logs e provisionamento do cloud provider","title":"Troubleshooting"},{"location":"modulos/problemas/problemas/#comandos-uteis","text":"Fun\u00e7\u00e3o Comando Verificar logs (Docker) docker-compose logs -f Verificar containers docker ps Verificar pods (K8s) kubectl get pods Logs de um pod kubectl logs <pod> Acesso ao banco psql -h <db_host> -U <user> -d <database>","title":"Comandos \u00fateis"},{"location":"modulos/problemas/problemas/#diagnostico-de-problemas-comuns","text":"Vari\u00e1veis de ambiente ausentes ou mal configuradas Consumo elevado de recursos Falha de conectividade entre servi\u00e7os Volume n\u00e3o persistente no banco de dados","title":"Diagn\u00f3stico de problemas comuns"},{"location":"modulos/recursoMinimo/infraestrutura/","text":"Infraestrutura de Refer\u00eancia Requisitos M\u00ednimos Servi\u00e7o CPU Mem\u00f3ria RAM Disco Observa\u00e7\u00e3o API 2 vCPUs 4 GB 20 GB Ideal em VM ou container isolado WEB 1 vCPU 2 GB 10 GB Pode ser compartilhado com a API em ambientes pequenos Banco de Dados 4 vCPUs 8 GB SSD 100 GB Volume persistente recomendado Redis 1 vCPU 1 GB 1 GB Utilizado para cache Requisitos de Infraestrutura (Cloud e On-Premises) Requisitos m\u00ednimos (por componente) Componente CPU Mem\u00f3ria Armazenamento Observa\u00e7\u00e3o API 2 vCPUs 4 GB 20 GB SSD Banco externo recomendado WEB 2 vCPUs 2 GB 10 GB SSD Load Balancer recomendado Banco de Dados 4 vCPUs 8 GB 100 GB SSD Discos provisionados ou NVMe Redis 1 vCPU 1 GB 2 GB Para cache auxiliar Requisitos recomendados (Produ\u00e7\u00e3o - Alta disponibilidade) Cloud API WEB Banco de Dados Observa\u00e7\u00e3o AWS t3.medium t3.small r5.large + EBS gp3 Multi-AZ e snapshots Azure B2ms B1ms E4s v5 Storage Premium GCP e2-standard-2 e2-small n2-standard-4 Persistent Disks Regional Para On-Premises: Virtualiza\u00e7\u00e3o recomendada: Proxmox, VMware, KVM Load Balancer: HAProxy ou NGINX Storage: RAID 10 com discos SSD ou NVMe Backup: sistema de snapshots + offsite","title":"Infraestrutura de refer\u00eancia"},{"location":"modulos/recursoMinimo/infraestrutura/#infraestrutura-de-referencia","text":"","title":"Infraestrutura de Refer\u00eancia"},{"location":"modulos/recursoMinimo/infraestrutura/#requisitos-minimos","text":"Servi\u00e7o CPU Mem\u00f3ria RAM Disco Observa\u00e7\u00e3o API 2 vCPUs 4 GB 20 GB Ideal em VM ou container isolado WEB 1 vCPU 2 GB 10 GB Pode ser compartilhado com a API em ambientes pequenos Banco de Dados 4 vCPUs 8 GB SSD 100 GB Volume persistente recomendado Redis 1 vCPU 1 GB 1 GB Utilizado para cache","title":"Requisitos M\u00ednimos"},{"location":"modulos/recursoMinimo/infraestrutura/#requisitos-de-infraestrutura-cloud-e-on-premises","text":"","title":"Requisitos de Infraestrutura (Cloud e On-Premises)"},{"location":"modulos/recursoMinimo/infraestrutura/#requisitos-minimos-por-componente","text":"Componente CPU Mem\u00f3ria Armazenamento Observa\u00e7\u00e3o API 2 vCPUs 4 GB 20 GB SSD Banco externo recomendado WEB 2 vCPUs 2 GB 10 GB SSD Load Balancer recomendado Banco de Dados 4 vCPUs 8 GB 100 GB SSD Discos provisionados ou NVMe Redis 1 vCPU 1 GB 2 GB Para cache auxiliar","title":"Requisitos m\u00ednimos (por componente)"},{"location":"modulos/recursoMinimo/infraestrutura/#requisitos-recomendados-producao-alta-disponibilidade","text":"Cloud API WEB Banco de Dados Observa\u00e7\u00e3o AWS t3.medium t3.small r5.large + EBS gp3 Multi-AZ e snapshots Azure B2ms B1ms E4s v5 Storage Premium GCP e2-standard-2 e2-small n2-standard-4 Persistent Disks Regional","title":"Requisitos recomendados (Produ\u00e7\u00e3o - Alta disponibilidade)"},{"location":"modulos/recursoMinimo/infraestrutura/#para-on-premises","text":"Virtualiza\u00e7\u00e3o recomendada: Proxmox, VMware, KVM Load Balancer: HAProxy ou NGINX Storage: RAID 10 com discos SSD ou NVMe Backup: sistema de snapshots + offsite","title":"Para On-Premises:"},{"location":"modulos/referencias/referencia/","text":"Refer\u00eancias Docker: https://docs.docker.com Kubernetes: https://kubernetes.io/docs PostgreSQL: https://www.postgresql.org/docs/ Prometheus: https://prometheus.io Grafana: https://grafana.com Elastic Stack (ELK): https://www.elastic.co/elastic-stack HAProxy: https://www.haproxy.org/ Seguran\u00e7a em Containers (OWASP): https://owasp.org/www-project-container-security/","title":"Refer\u00eancias"},{"location":"modulos/referencias/referencia/#referencias","text":"Docker: https://docs.docker.com Kubernetes: https://kubernetes.io/docs PostgreSQL: https://www.postgresql.org/docs/ Prometheus: https://prometheus.io Grafana: https://grafana.com Elastic Stack (ELK): https://www.elastic.co/elastic-stack HAProxy: https://www.haproxy.org/ Seguran\u00e7a em Containers (OWASP): https://owasp.org/www-project-container-security/","title":"Refer\u00eancias"}]}